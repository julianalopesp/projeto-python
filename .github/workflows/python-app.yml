name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest httpx
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest httpx
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run tests with pytest
        run: |
          pytest

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: julianalopesp
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Build and push Docker image
        run: |
          docker build -t julianalopesp/projeto-python:latest .
          docker push julianalopesp/projeto-python:latest

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Enviar notificaÃ§Ã£o no discord
        run: |
          curl -H "Content-Type: application/json" \
            -d '{"content": "ðŸš€ O deploy foi realizado com sucesso!"}' \
            ${{ secrets.DISCORD_WEBHOOK_URL }}
